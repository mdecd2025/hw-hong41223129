var tipuesearch = {"pages": [{'title': 'About', 'text': '課程名稱: 協同產品設計實習 - Collaborative Product Design Practice \n 學員作業網站:\xa0 https://mdecd2025.github.io/hw-hong41223129/ \n 學員作業倉儲:\xa0 https://github.com/mdecd2025/hw-hong41223129 \n \n 課程代號: cd2025 \n Teams 線上教學: \n 以 "學號@nfu.edu.tw" 登入 \xa0 https://login.microsoftonline.com/ \xa0 Office 365 \n Teams 團隊代碼:\xa0 p5z4eku \n \n 課程評分: \n Homework (30%) - 每週至少提交兩次與課程進度有關的內容, 完成後填回自評表單 \n Exam (40%) - 建立包含操作流程影片、心得以及提供檔案下載的網頁後填回自評表單 \n Final Report (30%) - 利用網頁內容進行簡報並提交 pdf 格式書面報告, 完成後填回自評表單 \n', 'tags': '', 'url': 'About.html'}, {'title': 'tasks', 'text': '', 'tags': '', 'url': 'tasks.html'}, {'title': 'w1', 'text': '本周更新可攜的python版本 \n \n', 'tags': '', 'url': 'w1.html'}, {'title': 'w3', 'text': '使用程式碼來索取小組連結與個人連結 \n # 從  Brython 程式庫中的 browser 導入 html, 可用來輸出超文件內容\n# 而所導入的 document 可以指向網頁中的特定 id 內容\nfrom browser import html, document\n# 建立 url 變數與網站中 2a 學員的學號與帳號資料 URL 網誌字串對應\nurl = "https://mde.tw/list/2a.txt"\n# 利用 open() 物件中的 readlines() 方法, 取出網站中的資料並逐行放入數列中, 因此 data 的資料型別為數列\ndata = open(url).readlines()\n# 進行資料查驗時, 印出 data 數列內容\n#print(data)\n# 因為學員資料中的第一列為標題, 因此有效資料從索引值 1 開始\nall_stud = data[1:]\n# 利用 len() 函式查驗 all_stud 數列有幾筆資料, 因為要與前後的字串併接, 因此利用 str() 將整數轉為字串\nprint("總共有 " + str(len(all_stud)) + "名學員")\n# \n# 利用 document[] 取得 id 為 "brython_div1" 的位置, 然後與 brython_div1 變數對應\nbrython_div1 = document["brython_div1"]\n# 利用 Brython 的 "<=" 特殊符號, 將右值帶有字串與超文件內容物件插入 brython_div1 變數所指定的位置\n# 其中利用 html.A 建立 anchor 標註物件, 第一個變數為 anchor 字串, 第二個變數則為 hyper text reference\nbrython_div1 <= "1. " + html.A("2a-ag6", href="https://mdecd2025.github.io/2a-ag6/")+ html.A("(repo)", href="https://github.com/mdecd2025/2a-ag6")\n# 利用 html.BR() 插入 break 標註\nbrython_div1 <= html.BR()\nbrython_div1 <= "2. " + html.A("41223110", href="https://mdecd2025.github.io/hw-41223110/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41223110")\nbrython_div1 <= html.BR()\nbrython_div1 <= "3. " + html.A("41223125", href="https://mdecd2025.github.io/hw-Linjiahong41223125/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-Linjiahong41223125")\nbrython_div1 <= html.BR()\nbrython_div1 <= "4. " + html.A("41223129", href="https://mdecd2025.github.io/hw-hong41223129/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-hong41223129")\nbrython_div1 <= html.BR()\nbrython_div1 <= "5. " + html.A("41223132", href="https://mdecd2025.github.io/hw-CHN41223132/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-CHN41223132")\nbrython_div1 <= html.BR()\nbrython_div1 <= "6. " + html.A("41223133", href="https://mdecd2025.github.io/hw-41223133/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41223133")\nbrython_div1 <= html.BR()\nbrython_div1 <= "7. " + html.A("41223147", href="https://mdecd2025.github.io/hw-41223147/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41223147")\n \n 1.\xa0 2a-ag6 (repo) 2.\xa0 41223110 (repo) 3.\xa0 41223125 (repo) 4.\xa0 41223129 (repo) 5.\xa0 41223132 (repo) 6.\xa0 41223133 (repo) 7.\xa0 41223147 (repo) \n', 'tags': '', 'url': 'w3.html'}, {'title': 'w4', 'text': '使用Pussy來新增ssh鑰匙 \n \n', 'tags': '', 'url': 'w4.html'}, {'title': 'w5', 'text': '詳細說明如何手動方式在 Webots 建立下列場景 \n 要手動在 Webots 中建立場景，您可以按照以下步驟進行： \n \n 啟動 Webots：開啟 Webots 軟體。 \n 創建新世界 (New World)：選擇\xa0 File -> New World ，創建一個新的仿真世界。 \n 設置場景元素：在左側的“場景樹”中，您可以選擇添加不同的物體，如機器人、地面、障礙物等。選擇“Add”按鈕來添加物體，並選擇所需的物件。 \n 配置機器人模型：選擇一個機器人模型，並配置其所需的參數。 \n 設置傳感器：為您的機器人添加各種傳感器，如距離感測器、相機等。 \n 保存並測試場景：設定完成後，保存場景並運行仿真來測試您的場景。 \n \n 一、繁體中文詳細說明 \n Webots 是一款由 Cyberbotics Ltd. 開發的開源 3D 機器人模擬器，廣泛應用於工業、教育和研究領域。 \n Webots 的開發始於 1996 年，最初由瑞士洛桑聯邦理工學院（EPFL）的 Olivier Michel 博士開發，後來在 1998 年由 Cyberbotics Ltd. 作為專有軟體進行開發。 \n Webots 提供大量可自由修改的機器人、感測器、致動器和物體模型。使用者可以從頭開始構建新模型，或從 3D CAD 軟體中導入模型。在設計機器人模型時，使用者需要指定物體的圖形屬性（如形狀、尺寸、位置、方向、顏色和材質）和物理屬性（如質量、摩擦係數、彈簧和阻尼常數）。軟體中還包含簡單的流體動力學模擬功能。 \n Webots 使用 ODE（Open Dynamics Engine）來檢測碰撞並模擬剛體動力學。ODE 函式庫允許精確模擬物體的物理屬性，如速度、慣性和摩擦力。 \n 二、重要英文單字與用法整理 \n Professional：形容詞，表示「專業的」，用來描述 Webots 的專業性質。 \n Mobile robot：名詞片語，表示「移動機器人」，指 Webots 所模擬的機器人類型。 \n Simulation：名詞，表示「模擬」，指 Webots 的主要功能。 \n Software package：名詞片語，表示「軟體套件」，指 Webots 作為一個完整的軟體解決方案。 \n Rapid prototyping environment：名詞片語，表示「快速原型設計環境」，描述 Webots 提供的開發環境。 \n Allow：動詞，表示「允許」，用來說明 Webots 的功能。 \n User：名詞，表示「使用者」，指使用 Webots 的人。 \n Create：動詞，表示「創建」，描述使用者在 Webots 中的操作。 \n 3D virtual worlds：名詞片語，表示「3D 虛擬世界」，指使用者在 Webots 中創建的模擬環境。 \n 三、英文文法逐句分析 \n Webots is a professional mobile robot simulation software package that offers a rapid prototyping environment, allowing users to create 3D virtual worlds. It supports multiple programming languages, including C, C++, Python, Java, and MATLAB. Webots includes a large collection of freely modifiable models of robots, sensors, actuators, and objects, enabling users to build new models from scratch or import them from 3D CAD software. Additionally, it provides functionalities for taking screenshots and recording simulations, with simulation scenes stored in cross-platform *.wbt files based on the VRML language \n 繁體中文摘要：Webots 是一款專業的移動機器人模擬軟體，提供快速原型設計環境，允許使用者創建 3D 虛擬世界。它支援多種程式語言，如 C、C++、Python、Java 和 MATLAB。Webots 包含可自由修改的機器人、感測器、致動器和物件模型，使用者可從零開始建構或從 3D CAD 軟體匯入。此外，它提供截圖與錄製模擬的功能，模擬場景儲存為基於 VRML 語言的 *.wbt 檔案，具備跨平台相容性。 \n \n \n \n \n 四、手動建立場景的詳細步驟 \n 假設您希望在 Webots 中建立一個簡單場景：一個機器人在平面上移動並避開障礙物。以下是手把手說明如何透過圖形介面完成： \n 步驟 1：啟動 Webots \n \n \n 打開 Webots 應用程式。 \n \n \n 在啟動畫面選擇「New World」（新建世界）。 \n \n \n 步驟 2：設置基本場景 \n \n \n 加入地板 \n \n \n 在頂部選單點擊「Add」（添加）。 \n \n \n 選擇「Solid」（實體物件） > 「Box」（方塊）。 \n \n \n 在屬性面板中設置： \n \n \n 大小（Size）：10m x 10m x 0.1m（寬廣的平面）。 \n \n \n 名稱（Name）：Floor。 \n \n \n \n \n 注意：確保地板位於 Z=0，避免懸浮。 \n \n \n \n \n 加入機器人 \n \n \n 點擊「Add」 > 「Robot」（機器人）。 \n \n \n 在下拉選單中選擇「E-puck」（一個簡單的雙輪機器人）。 \n \n \n 調整位置（Translation）：例如 (0, 0, 0.05)，使其位於地板上。 \n \n \n 注意：檢查機器人是否與地板接觸，避免穿透或漂浮。 \n \n \n \n \n 加入障礙物 \n \n \n 點擊「Add」 > 「Solid」 > 「Box」。 \n \n \n 設置大小：1m x 1m x 0.5m。 \n \n \n 位置（Translation）：(2, 0, 0.25)。 \n \n \n 名稱：Obstacle。 \n \n \n \n \n 步驟 3：添加控制器 \n \n \n 點擊機器人節點（E-puck）。 \n \n \n 在屬性面板中找到「Controller」欄位。 \n \n \n 點擊下拉選單，選擇「 <extern> 」（外部控制器）。 \n \n \n 點擊「Wizard」（精靈），選擇「Create a new controller」。 \n \n \n 輸入名稱（如「avoid_obstacle」），選擇語言（如 Python）。 \n \n \n Webots 會生成一個簡單的控制器檔案。 \n \n \n \n \n \n \n 步驟 4：編輯控制器 \n \n \n 在控制器檔案中輸入簡單的避障邏輯（範例 Python 程式碼）： \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n 14 \n 15 \n 16 \n 17 \n 18 \n 19 \n \n \n \n from   controller  import   Robot \n \xa0 \n robot  =   Robot() \n timestep  =   64 \n left_motor  =   robot.getDevice( "left wheel motor" ) \n right_motor  =   robot.getDevice( "right wheel motor" ) \n left_motor.setPosition( float ( \'inf\' )) \n right_motor.setPosition( float ( \'inf\' )) \n distance_sensor  =   robot.getDevice( "ds0" ) \n distance_sensor.enable(timestep) \n \xa0 \n while   robot.step(timestep) ! =   - 1 : \n \xa0\xa0\xa0\xa0 distance  =   distance_sensor.getValue() \n \xa0\xa0\xa0\xa0 if   distance <  950 :\xa0  # 檢測到障礙物 \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 left_motor.setVelocity( - 5 ) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 right_motor.setVelocity( 5 )\xa0  # 轉向 \n \xa0\xa0\xa0\xa0 else : \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 left_motor.setVelocity( 5 ) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 right_motor.setVelocity( 5 )\xa0  # 前進 \n \n \n \n \n \n \n \n \n \n 步驟 5：運行模擬 \n \n \n 點擊頂部選單的「Run」（運行按鈕）。 \n \n \n 觀察機器人是否能移動並避開障礙物。 \n \n \n 若有問題，檢查： \n \n \n 機器人與地板的接觸是否正常。 \n \n \n 感測器是否啟用。 \n \n \n 控制器是否正確綁定。 \n \n \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'w5.html'}, {'title': 'w6', 'text': '啟動Webots需在可攜內部輸入Webotsw後可開啟軟體，但需要把 Webots_2025a_web.7z 放在裡面後即可開啟 \n', 'tags': '', 'url': 'w6.html'}, {'title': 'task', 'text': '', 'tags': '', 'url': 'task.html'}, {'title': 'task3', 'text': '四連桿零件繪製過程 \n \n 四連桿組合過程 \n', 'tags': '', 'url': 'task3.html'}, {'title': 'Homework', 'text': '作業 (30%) \n HW1 (5%):  建立由 Box 組成的平面四連桿機構 Webots 模擬場景 \n part1: \n 請各學員在 USB 隨身碟或個人電腦上完成 cd2025 課程所需的可攜系統配置: \n 下載  portable_wcm2025.7z  (330MB, 解開壓縮後 1.4GB) \n Webots_2025a.7z  (1.5 GB, 解開後約為 2.9GB, 可單獨運作) \n Webots_2025a_web.7z  (171 MB, 解開壓縮後約為 1GB, 必須連網運作) \n Blender4.2.7z \n part2: \n 請各學員完成可攜程式系統配置後, 利用 Webots R2025a 中寬度與高度都為 0.1m 的 box 物件建立一個簡單的平面四連桿機構模擬場景. \n base (基座) 長度 1m, link1 長度 0.4m, link2 長度 0.6m, link3 長度 0.9m, 各轉軸均為 HingeJoint, joint1 旋轉速度設定為 1radian/sec. \n part3: \n 模擬場景啟動後, 按下 s 鍵機構開始作動, 按下 p 鍵後機構暫停. \n 參考資料: \n cd2025_hw1_demo.7z \n HW2 (5%):  建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景 \n 各學員請利用 CAD 系統依據 HW1 的連桿尺寸與運動方式, 配置適當大小的旋轉軸以及基座後, 利用 Webots R2025a 完成一個簡單的平面四連桿機構模擬場景. \n 參考資料: \n fourbar_slvs.7z \n HW3 (20%): 建立 Webots 桌上籃球遊戲機模擬系統 \n 請各分組利用CAD 系統建立一個能在電腦桌 (1600W X 700D X 740H mm) 上運作的投籃機構 ( 參考影片 )後, 導入 Webots R2025a 套件, 建立一個能由使用者透過鍵盤按鍵操作, 且具備計分板的籃球遊戲機模擬系統. \n 參考資料: \n 參考資料: \n fourbar_ball_throwing_linkage.slvs \n sixbar_ball_throwing_linkage.slvs \n \n', 'tags': '', 'url': 'Homework.html'}, {'title': 'HW1', 'text': 'HW1 (5%):  建立由 Box 組成的平面四連桿機構 Webots 模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW1 - 學員學號 \n \n', 'tags': '', 'url': 'HW1.html'}, {'title': 'HW2', 'text': 'HW2 (5%):  建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW2 - 學員學號 \n \n', 'tags': '', 'url': 'HW2.html'}, {'title': 'HW3', 'text': 'HW3 (20%): 建立 Webots 桌上籃球遊戲機模擬系統 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW3 - 學員學號 \n \n', 'tags': '', 'url': 'HW3.html'}, {'title': 'Midterm', 'text': '本課程所繳交的期中成績為學員自評之學習期望成績. \n 期中考週的自評期望成績繳交流程: \n \n 整理先前所完成的各週的進度、作業網頁內容以及心得 \n 拍攝期中自評影片, 上傳至 Youtube 後, 以" 國立虎尾科技大學 - 機械設計工程系 - cd2025 期中自評- 學員學號 "為影片標題後嵌入本頁面中 \n 回填期中自評表單 \n 上傳學員期中成績 \n \n 各週進度: \n 各週網頁內容: \n 期中心得: \n 期中自評影片: \n \n \n', 'tags': '', 'url': 'Midterm.html'}, {'title': 'Exam', 'text': 'Exam1 (10%): 建立 Webots 基本物件模擬場景 \n 各學員利用 Webots R2025a 套件中的 Shape 物件, 隨堂建立指定的機電系統模擬場景, 並利用 Python 程式進行互動控制. \n Exam2 (10%): 利用 CAD 零組件建立模擬場景\xa0 \n 各學員利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制. \n Exam3 (20%): Webots 機電模擬場景的協同設計 \n 各分組利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制. 過程中各學員必須採同步協同模式, 維護從 Github Classroom 取得的分組協同倉儲以及網站. \n 協同分組方式: \n \n 分配學員負責利用 Solvespace 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁. \n 分配學員負責利用 NX2312 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁. \n 分配學員負責利用 Webots 建立機電系統模擬場景, 並利用 Python 程式進行控制, 過程中必須將建構過程拍成帶有說明字幕的影片上傳至分組網頁. \n \n', 'tags': '', 'url': 'Exam.html'}, {'title': 'Exam1', 'text': 'Exam1 (10%): 建立 Webots 基本物件模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam1 - 學員學號 \n', 'tags': '', 'url': 'Exam1.html'}, {'title': 'Exam2', 'text': 'Exam2 (10%): 利用 CAD 零組件建立模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam2 - 學員學號 \n', 'tags': '', 'url': 'Exam2.html'}, {'title': 'Exam3', 'text': 'Exam3 (20%): Webots 機電模擬場景的協同設計 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3 - 學員學號 \n', 'tags': '', 'url': 'Exam3.html'}, {'title': 'Final', 'text': '期末協同專案執行過程影片、簡報與 PDf 報告檔案 (六人一組) (30%) \n 題目:  Webots 動態投籃模擬系統的協同設計 \n 說明:  \n 籃框架被配置在一定範圍內, 可隨機慢速前進、後退及左右擺動, 投籃機構系統帶有一定數量的籃球, 被配置在可自由移動的輪車上. \n 操作者可利用鍵盤特定按鍵控制投籃輪車的移動並發射投籃, 每投出一球後系統透過記分板進行計分, 並由送球機構進行補球或移動輪車取球, 遊戲可進行至全部數量籃球投完為止. \n 請將期末協同專案執行過程、內容與心得, 製作成影片，配合字幕上傳至 Youtube 後嵌入各階段的期末報告頁面中. \n 影片標題:  國立虎尾科技大學 - 機械設計工程系 - cd2025 期末報告 - 學員學號 - 各階段影片主題 \n', 'tags': '', 'url': 'Final.html'}, {'title': 'Brython', 'text': '1 add to 100 \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n \n \n', 'tags': '', 'url': 'Brython.html'}]};